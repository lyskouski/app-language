name: Project Verification Steps

on:
  pull_request:

jobs:
  build:
    name: Create Linux Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

#      - name: Update Kivy version in requirements.txt to 2.3.1
#        run: sed -i 's/kivy\[full\]==2.3.0/kivy[full]==2.3.1/' requirements.txt

      - name: Install requirements
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

# To Be Checked ...
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y autoconf automake libtool m4 \
              libffi-dev pkg-config libltdl-dev openjdk-17-jdk unzip

      - name: Apply Android Keychain
        env:
          ANDROID_KEYSTORE: ${{ secrets.ANDROID_KEYSTORE }}
          ANDROID_KEYSTORE_PSSW: ${{ secrets.ANDROID_KEYSTORE_PSSW }}
        run: |
          echo -n "$ANDROID_KEYSTORE" | base64 -d > key.keystore
          export P4A_RELEASE_KEYSTORE=key.keystore
          export P4A_RELEASE_KEYSTORE_PASSWD="$ANDROID_KEYSTORE_PSSW"
          export P4A_RELEASE_KEYALIAS_PASSWD="$ANDROID_KEYSTORE_PSSW"
          export P4A_RELEASE_KEYALIAS=key

      - name: Compile Android package
        run: |
          buildozer android release || true
          # Fix long build issue
          find .buildozer -name jnius_utils.pxi -exec sed -i 's/isinstance(arg, long) and //' {} +
          find .buildozer -name jnius_utils.pxi -exec sed -i 's/or isinstance(arg, long)//' {} +
          find .buildozer -name jnius_conversion.pxi -exec sed -i "s/isinstance(py_arg, (int, long))/isinstance(py_arg, int)/g" {} +
          find .buildozer -name jnius_conversion.pxi -exec sed -i "s/isinstance(obj, (int, long))/isinstance(obj, int)/g" {} +
          find .buildozer -name jnius_conversion.pxi -exec sed -i "/long: 'J',/d" {} +
          find .buildozer -name weakproxy.pyx -exec sed -i '/def __long__(self):/,+1d' {} +
          find .buildozer -name context_instructions.pyx -exec sed -i 's/long(h \* 6\.0)/int(h * 6.0)/g' {} +
          find .buildozer -name opengl.pyx -exec sed -i 's/(long, int)/(int)/g' {} +
          # Rebuild after fixes
          buildozer android release

      - name: List build directory contents
        run: ls -l
        working-directory: build

      - name: Search for APK file and copy to workspace
        run: |
          echo "Searching for AAB files in build directory..."
          APK_PATH=$(find build -name "*.aab" -type f | head -1)
          cp "$APK_PATH" "$GITHUB_WORKSPACE/tlum_Android.aab"

      - name: Add Artifact to Build
        uses: actions/upload-artifact@v4
        with:
          name: tlum_Android
          path: tlum_Android.aab
